<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./rcpp_write_index_outofbound_DeepState_TestHarness --input_test_file /home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_output/40019f00b082b8631c1334455208704c04d94eaf.crash</line>
</preamble>

<pid>12962</pid>
<ppid>12961</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_output/log_40019f00b082b8631c1334455208704c04d94eaf/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./rcpp_write_index_outofbound_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_output/40019f00b082b8631c1334455208704c04d94eaf.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.135 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x41E9B3</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>rcpp_write_index_outofbound(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>write_index_outofbound.cpp</file>
      <line>8</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_write_index_outofbound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound</dir>
      <file>rcpp_write_index_outofbound_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_write_index_outofbound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound</dir>
      <file>rcpp_write_index_outofbound_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411B23</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x406934</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xffffffff8830f254 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0xFFFFFFFF8830F254</siaddr>
  <stack>
    <frame>
      <ip>0x41E9B3</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>rcpp_write_index_outofbound(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>write_index_outofbound.cpp</file>
      <line>8</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_write_index_outofbound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound</dir>
      <file>rcpp_write_index_outofbound_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_write_index_outofbound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound</dir>
      <file>rcpp_write_index_outofbound_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411B23</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x406934</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_write_index_outofbound/rcpp_write_index_outofbound_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:16.919 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:50.554 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

