<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./rcpp_read_out_of_bound_DeepState_TestHarness --fuzz --output_test_dir /home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_output</line>
</preamble>

<pid>9900</pid>
<ppid>9899</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
    <arg>--track-origins=yes</arg>
  </vargv>
  <argv>
    <exe>./rcpp_read_out_of_bound_DeepState_TestHarness</exe>
    <arg>--fuzz</arg>
    <arg>--output_test_dir</arg>
    <arg>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_output</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.229 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>FishyValue</kind>
  <what>Argument 'size' of function __builtin_vec_new has a fishy (possibly negative) value: -1
</what>  <stack>
    <frame>
      <ip>0x4C3089F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E89E</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>rcpp_read_out_of_bound(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>read_out_of_bound.cpp</file>
      <line>6</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<clientmsg>
  <tid>1</tid>
  <text>new/new[] failed and should throw an exception, but Valgrind
  </text>
</clientmsg>
<clientmsg>
  <tid>1</tid>
  <text>   cannot throw exceptions and so is aborting instead.  Sorry.
  </text>
  <stack>
    <frame>
      <ip>0x4C2F81C</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
    </frame>
    <frame>
      <ip>0x4C30915</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E89E</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>rcpp_read_out_of_bound(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>read_out_of_bound.cpp</file>
      <line>6</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</clientmsg>

<status>
  <state>FINISHED</state>
  <time>00:00:00:45.997 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41E8B0</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>rcpp_read_out_of_bound(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>read_out_of_bound.cpp</file>
      <line>7</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xc3218598 is 1,765,627,224 bytes inside a block of size 1,765,629,856 in arena "client"</auxwhat>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:02:30.837 </time>
</status>

<error>
  <unique>0x51b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,765,626,824 bytes in 1 blocks are possibly lost in loss record 1,307 of 1,307</text>
    <leakedbytes>1765626824</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3089F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E89E</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>rcpp_read_out_of_bound(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>read_out_of_bound.cpp</file>
      <line>6</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_read_out_of_bound_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound</dir>
      <file>rcpp_read_out_of_bound_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_read_out_of_bound/rcpp_read_out_of_bound_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:02:34.972 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

