<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./rcpp_use_after_free_DeepState_TestHarness --fuzz --output_test_dir /home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_output</line>
</preamble>

<pid>10030</pid>
<ppid>10029</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
    <arg>--track-origins=yes</arg>
  </vargv>
  <argv>
    <exe>./rcpp_use_after_free_DeepState_TestHarness</exe>
    <arg>--fuzz</arg>
    <arg>--output_test_dir</arg>
    <arg>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_output</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.146 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>FishyValue</kind>
  <what>Argument 'size' of function malloc has a fishy (possibly negative) value: -1108212172
</what>  <stack>
    <frame>
      <ip>0x4C2FB0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x41E92A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>rcpp_use_after_free(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>use_after_free.cpp</file>
      <line>6</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41E93F</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>rcpp_use_after_free(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>use_after_free.cpp</file>
      <line>8</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x28 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0x28</siaddr>
  <stack>
    <frame>
      <ip>0x41E93F</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>rcpp_use_after_free(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>use_after_free.cpp</file>
      <line>8</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:34.914 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>FishyValue</kind>
  <what>Argument 'size' of function malloc has a fishy (possibly negative) value: -305683748
</what>  <stack>
    <frame>
      <ip>0x4C2FB0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x41E92A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>rcpp_use_after_free(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>use_after_free.cpp</file>
      <line>6</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41E93F</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>rcpp_use_after_free(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>use_after_free.cpp</file>
      <line>8</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x28 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0x28</siaddr>
  <stack>
    <frame>
      <ip>0x41E93F</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>rcpp_use_after_free(int)</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/src</dir>
      <file>use_after_free.cpp</file>
      <line>8</line>
    </frame>
    <frame>
      <ip>0x408B9A</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Test_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x408A08</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Run_testSAN_deepstate_test_rcpp_use_after_free_test()</fn>
      <dir>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free</dir>
      <file>rcpp_use_after_free_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x405E63</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.6</fn>
    </frame>
    <frame>
      <ip>0x411CDA</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_FuzzOneTestCase</fn>
    </frame>
    <frame>
      <ip>0x411DEF</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>DeepState_Fuzz</fn>
    </frame>
    <frame>
      <ip>0x4069AD</ip>
      <obj>/home/akhila/R/RcppDeepState/inst/testpkgs/testSAN/inst/testfiles/rcpp_use_after_free/rcpp_use_after_free_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:01:47.537 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:02:26.403 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

