// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_read_out_of_bound
int rcpp_read_out_of_bound(int sizeofarray);
RcppExport SEXP _testUBSAN_rcpp_read_out_of_bound(SEXP sizeofarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type sizeofarray(sizeofarraySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_read_out_of_bound(sizeofarray));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_use_after_deallocate
int rcpp_use_after_deallocate(int size);
RcppExport SEXP _testUBSAN_rcpp_use_after_deallocate(SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_use_after_deallocate(size));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_use_after_free
int rcpp_use_after_free(int size_free);
RcppExport SEXP _testUBSAN_rcpp_use_after_free(SEXP size_freeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type size_free(size_freeSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_use_after_free(size_free));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_write_index_outofbound
int rcpp_write_index_outofbound(int boundvalue);
RcppExport SEXP _testUBSAN_rcpp_write_index_outofbound(SEXP boundvalueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type boundvalue(boundvalueSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_write_index_outofbound(boundvalue));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_zero_sized_array
int rcpp_zero_sized_array(int vectorvalue);
RcppExport SEXP _testUBSAN_rcpp_zero_sized_array(SEXP vectorvalueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type vectorvalue(vectorvalueSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_zero_sized_array(vectorvalue));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_testUBSAN_rcpp_read_out_of_bound", (DL_FUNC) &_testUBSAN_rcpp_read_out_of_bound, 1},
    {"_testUBSAN_rcpp_use_after_deallocate", (DL_FUNC) &_testUBSAN_rcpp_use_after_deallocate, 1},
    {"_testUBSAN_rcpp_use_after_free", (DL_FUNC) &_testUBSAN_rcpp_use_after_free, 1},
    {"_testUBSAN_rcpp_write_index_outofbound", (DL_FUNC) &_testUBSAN_rcpp_write_index_outofbound, 1},
    {"_testUBSAN_rcpp_zero_sized_array", (DL_FUNC) &_testUBSAN_rcpp_zero_sized_array, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_testUBSAN(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
