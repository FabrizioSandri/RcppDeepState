USERLIBST=libdeepstate.a
USERDIR=../inst/lib

PKG_CPPFLAGS =-I. -I../inst/include/  -I/usr/local/lib/R/site-library/Rcpp/include
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)

all:	$(SHLIB) userLibrary

SOURCES_TEST=../inst/testpkgs/binsegRcpp/src/RcppExports.cpp ../inst/testpkgs/binsegRcpp/src/binseg_normal.cpp ../inst/testpkgs/binsegRcpp/src/binseg_normal_cost.cpp ../inst/testpkgs/binsegRcpp/src/rcpp_interface.cpp ../inst/testpkgs/testSAN/src/RcppExports.cpp ../inst/testpkgs/testSAN/src/read_out_of_bound.cpp ../inst/testpkgs/testSAN/src/use_after_deallocate.cpp ../inst/testpkgs/testSAN/src/use_after_free.cpp ../inst/testpkgs/testSAN/src/write_index_outofbound.cpp ../inst/testpkgs/testSAN/src/zero_sized_array.cpp
OBJECTS_TEST = $(SOURCES_TEST:.cpp=.o)
SOURCES= ../inst/include/DeepState.c ../inst/include/Log.c ../inst/include/Option.c ../inst/include/Stream.c
OBJECTS= $(SOURCES:.c=.o) 


userLibrary: $(USERLIBST)
	-@if test ! -e $(USERDIR)$(R_ARCH); then mkdir -p $(USERDIR)$(R_ARCH); fi
	cp $(USERLIBST) $(USERDIR)$(R_ARCH)
	rm $(USERLIBST)
	rm $(OBJECTS)
	

$(USERLIBST): $(OBJECTS)
	$(AR) qc $(USERLIBST) $^
	@if test -n "$(RANLIB)"; then $(RANLIB) $(USERLIBST); fi

$(SHLIB): $(OBJECTS_TEST)

.PHONY: all clean userLibrary

clean:
	rm -f $(OBJECTS) $(SHLIB) $(USERLIBST)
